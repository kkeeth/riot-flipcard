(function(a,r){typeof exports=="object"&&typeof module<"u"?r(require("riot")):typeof define=="function"&&define.amd?define(["riot"],r):(a=typeof globalThis<"u"?globalThis:a||self,r(a.riot))})(this,function(a){"use strict";a.__.globals;const r={css:'flipcard { display: block; position: relative; perspective: 500px; transform-origin: center; }flipcard .cardwrap,[is="flipcard"] .cardwrap{ transition: 0.5s; transform-style: preserve-3d; position: relative; }flipcard .flipx,[is="flipcard"] .flipx{ transform: rotateY(180deg); }flipcard .flipy,[is="flipcard"] .flipy{ transform: rotateX(180deg); }flipcard .flipy.flipx,[is="flipcard"] .flipy.flipx{ transform: rotate3d(-45,-45,0,180deg); }flipcard .back45 .back,[is="flipcard"] .back45 .back{ transform: rotate3d(45,45,0,180deg); }flipcard .backflip .back,[is="flipcard"] .backflip .back{ transform: rotate3d(180,0,0,180deg); }flipcard .front,[is="flipcard"] .front,flipcard .back,[is="flipcard"] .back{ background: white; position: absolute; box-sizing: border-box; padding: 10px; backface-visibility: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.2); }flipcard .front,[is="flipcard"] .front{ transform: rotateY(0deg); }flipcard .back,[is="flipcard"] .back{ transform: rotateY(180deg); background: #444; color: white; }',exports:{onBeforeMount(i){this.state={flipx:!1,flipy:!1,backflip:!1,back45:!1,direction:i.direction||"x"}},onMounted(){let i;this.root.style.width||(this.root.style.width="100px"),this.root.style.height||(this.root.style.height="100px"),this.root.style.display="block",(i=this.state.direction)!=null&&i.match(/[xy]{2}/)&&(this.state.back45=!0),this.state.direction==="y"&&(this.state.backflip=!0),[].slice.call(this.root.querySelectorAll(".front,.back,.cardwrap")).forEach(t=>(t.style.width=this.root.offsetWidth+"px",t.style.height=this.root.offsetHeight+"px")),this.update()},toggle(){let i,t;return(this.state.direction!=="y"||(i=this.state.direction)!=null&&i.match(/x/))&&(this.state.flipx=!this.state.flipx),(t=this.state.direction)!=null&&t.match(/y/)&&(this.state.flipy=!this.state.flipy),this.update()},front(){let i,t;(this.state.direction!=="y"||(i=this.state.direction)!=null&&i.match(/x/))&&(this.state.flipx=!1),(t=this.state.direction)!=null&&t.match(/y/)&&(this.state.flipy=!1),this.update()},back(){let i,t;(this.state.direction!=="y"||(i=this.state.direction)!=null&&i.match(/x/))&&(this.state.flipx=!0),(t=this.state.direction)!=null&&t.match(/y/)&&(this.state.flipy=!0),this.update()}},template:(i,t,l,s)=>i('<div expr0="expr0"><slot expr1="expr1"></slot></div>',[{redundantAttribute:"expr0",selector:"[expr0]",expressions:[{type:t.ATTRIBUTE,isBoolean:!1,name:"class",evaluate:e=>`cardwrap${e.state.flipx?" flipx":""}${e.state.flipy?" flipy":""}${e.state.backflip?" backfliip":""}${e.state.back45?" back45":""}`}]},{type:l.SLOT,attributes:[{type:t.ATTRIBUTE,isBoolean:!1,name:"toggle",evaluate:e=>e.toggle},{type:t.ATTRIBUTE,isBoolean:!1,name:"back",evaluate:e=>e.back}],name:"default",template:i(null,[{expressions:[{type:t.ATTRIBUTE,isBoolean:!1,name:"toggle",evaluate:e=>e.toggle},{type:t.ATTRIBUTE,isBoolean:!1,name:"back",evaluate:e=>e.back}]}]),redundantAttribute:"expr1",selector:"[expr1]"}]),name:"flipcard"};a.register("flipcard",r)});
